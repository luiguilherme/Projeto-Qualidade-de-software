<apex:page controller="CTIServiceIntegrationVFController" cache="false" showHeader="false" sidebar="false" action="{!init}">
    <script>
        window.onload = function () {
            try {
                console.log("on VFPAGE");
                let caseId;
                if (typeof external.isCallActive === "function") {
                    console.log("Funcionalidades WDE atrubu√≠das");
                    if (typeof external.getCaseId === "function") {
                        caseId = external.getCaseId();
                    }                    

                    /*if (caseId) {
                        doCloseCaseIfNonCanvas(caseId);
                    }*/

                    // Setting and sending message to Aura component with method window.postMessage
                    let message = {
                        service: "WDE_InitialResponse",
                        vfHost: window.location.origin,
                        caseId: caseId
                    };
                    console.log("message", message);
                    var lexOrigin = "{!pageURL}";
                    console.log("lexOrigin", lexOrigin);
                    parent.postMessage(message, lexOrigin);
                    console.log("WDE_InitialResponse posted");

                    // Add listener and setting callback to get data from Aura component
                    window.removeEventListener("message", receiveMessage);
                    window.addEventListener("message", receiveMessage);
                    console.log("listener added");

                    function receiveMessage(event) {
                        console.log("on receiveMessage");
                        let type = event.data.service;
                        let payload = event.data.payload;
                        
                        if (!payload) {
                            payload = {
                                CustomerInteractionId__c: event.data.accountId
                            }
                        }

                        if (type == 'CTIServiceIntegration_DirectTransfer') {
                            event.stopPropagation();

                            payload.service = 'WDE_DirectTransfer';
                            doDirectTransfer(payload);

                        } else if (type == 'CTIServiceIntegration_AssistedTransfer') {
                            event.stopPropagation();

                            payload.service = 'WDE_AssistedTransfer';

                            let wdeResponse = external.transferInit(payload.DestinyCell__c, payload.CaseId__c, payload.CustomerInteractionId__c);

                            payload.wdeResponse = wdeResponse;

                            if (wdeResponse) {
                                doUpdateWdeCase(payload);
                                return;
                            } else {
                                payload.caseUpdated = false;
                                parent.postMessage(payload, lexOrigin);
                            }
                        } else if (type == 'CTIServiceIntegration_FinishAssistedTransfer') {
                            event.stopPropagation();

                            payload.service = 'WDE_FinishAssistedTransfer';

                            doFinishAssistedTransfer(payload);

                        } else if (type == 'CTIServiceIntegration_CancelAssistedTransfer') {
                            event.stopPropagation();
                            payload.service = "WDE_CancelAssistedTransfer";

                            let wdeResponse = external.transferCancel();

                            payload.wdeResponse = wdeResponse;

                            if (wdeResponse) {
                                doUpdateWdeCase(payload);
                                return;
                            } else {
                                payload.caseUpdated = false;
                                parent.postMessage(payload, lexOrigin);
                            }

                        } else if (type == 'CTIServiceIntegration_TalkToTheCustomer') {
                            event.stopPropagation();
                            payload.service = "WDE_TalkToTheCustomer";

                            let wdeResponse = external.alternateCall();

                            payload.wdeResponse = wdeResponse;

                            if (wdeResponse) {
                                doUpdateWdeCase(payload);
                                return;
                            } else {
                                payload.caseUpdated = false;
                                parent.postMessage(payload, lexOrigin);
                            }
                        } else if (type == 'CTIServiceIntegration_CloseSummary') {
                            event.stopPropagation();
                            let wdeResponse = external.isConsultCall();

                            payload.wdeResponse = wdeResponse;
                            payload.service = "WDE_CloseSummary";

                            parent.postMessage(payload, lexOrigin);
                        } else if (type == 'CTIServiceIntegration_PerformConsult') {
                            event.stopPropagation();
                            payload.service = "WDE_PerformConsult";

                            let wdeResponse = external.consult(payload.DestinyCell__c, payload.CaseId__c, payload.CustomerInteractionId__c);

                            payload.wdeResponse = wdeResponse;

                            if (wdeResponse) {
                                doUpdateWdeCase(payload);
                                return;
                            } else {
                                payload.caseUpdated = false;
                                parent.postMessage(payload, lexOrigin);
                            }

                        } else if (type == 'CTIServiceIntegration_FinalizeConsult') {
                            event.stopPropagation();
                            payload.service = "WDE_FinalizeConsult";

                            let wdeResponse = external.endConsult();

                            payload.wdeResponse = wdeResponse;

                            if (wdeResponse) {
                                doUpdateWdeCase(payload);
                                return;
                            } else {
                                payload.caseUpdated = false;
                                parent.postMessage(payload, lexOrigin);
                            }

                        } else if (type == 'CTIServiceIntegration_CallDropped') {
                            console.log("on CTIServiceIntegration_CallDropped");
                            event.stopPropagation();
                            payload.service = "WDE_CallDropped";

                            let wdeResponse = external.isCallActive();
                            payload.wdeResponse = wdeResponse;

                            if (wdeResponse) {
                                parent.postMessage(payload, lexOrigin);
                            } else {
                                console.log("no active call");
                                if(payload.isProductNextAndMobile) {
                                    if (payload.CaseId__c && payload.CaseId__c != "{Session.CaseId}") { //customerInteraction   
                                        console.log("update case");                                
                                        payload.OperationType__c = 'CallDropped';
                                        doUpdateMobileNextDisputeCaseOnWde(payload);
                                    } else {
                                        payload.CaseId__c = '';
                                        console.log("create case");
                                        doCreateMobileNextDisputeCaseOnWde(payload);
                                    }
                                } else {
                                    if (payload.CaseId__c && payload.CaseId__c != "{Session.CaseId}") {                                    
                                        payload.OperationType__c = 'CallDropped';
                                        doUpdateWdeCaseAndMarkDone(payload);
                                    } else {
                                        doCreateCaseAndMarkDone(payload);
                                    }
                                }
                                
                            }
                            console.log("out CTIServiceIntegration_CallDropped");
                        } else if (type == 'CTIServiceIntegration_NewService') {
                            event.stopPropagation();
                            payload.service = "WDE_NewService";

                            if (external.isCallActive()) {
                                payload.wdeResponse = false;
                            } else {
                                external.markDone();
                                payload.wdeResponse = true;
                            }

                            payload.updateWdeCase = true;
                            parent.postMessage(payload, lexOrigin);
                        } else if (type == 'CTIServiceIntegration_isCallActive') {
                            event.stopPropagation();
                            payload.service = "WDE_IsCallActive";

                            let wdeResponse = external.isCallActive();

                            payload.wdeResponse = wdeResponse;

                            parent.postMessage(payload, lexOrigin);
                        }
                    }
                }
            } catch (e) {
                console.log(`Error CTI Service Integration Visualforce Page: ${e}`);
            }
        };

        function doDirectTransfer(payload) {
            Visualforce.remoting.Manager.invokeAction(
                CTIServiceIntegrationVFController.sendCaseToQueue(
                    payload,
                    function (caseSentToQueue, event) {

                        if (caseSentToQueue) {
                            // Calls WDE function to direct transfer the call
                            let wdeResponse = external.transferToCellDirect(payload.DestinyCell__c, payload.CaseId__c, payload.CustomerInteractionId__c);

                            if (wdeResponse) {
                                payload.wdeResponse = wdeResponse;
                                doUpdateWdeCase(payload);
                                return;
                            } else {
                                // Calls backend to set case owner to current user
                                doSetCaseOwnerAsCurrentUser(payload);
                                return;
                            }
                        } else {
                            payload.updateWdeCase = false;
                            payload.wdeResponse = false;
                            parent.postMessage(payload, "{!pageURL}");
                        }
                    },
                    { escape: true }
                )
            );
        };

        function doSetCaseOwnerAsCurrentUser(payload) {
            Visualforce.remoting.Manager.invokeAction(
                CTIServiceIntegrationVFController.setCaseOwnerAsCurrentUser(
                    payload,
                    function (result, event) {
                        payload.wdeResponse = false;
                        payload.updateWdeCase = false;

                        parent.postMessage(payload, "{!pageURL}");
                    },
                    { escape: true }
                )
            );
        };

        function doUpdateWdeCase(payload) {
            Visualforce.remoting.Manager.invokeAction(
                CTIServiceIntegrationVFController.updateWdeCase(
                    payload,
                    function (result, event) {

                        payload.updateWdeCase = result;

                        parent.postMessage(payload, "{!pageURL}");
                    },
                    { escape: true }
                )
            );
        };

        function doFinishAssistedTransfer(payload) {
            Visualforce.remoting.Manager.invokeAction(
                CTIServiceIntegrationVFController.sendCaseToQueue(
                    payload,
                    function (caseSentToQueue, event) {

                        if (caseSentToQueue) {
                            let wdeResponse = external.transferComplete();

                            if (wdeResponse) {
                                payload.wdeResponse = wdeResponse;
                                doUpdateWdeCase(payload);
                                return;
                            } else {
                                // Calls backend to set case owner to current user
                                doSetCaseOwnerAsCurrentUser(payload);
                                return;
                            }
                        } else {
                            payload.updateWdeCase = false;
                            payload.wdeResponse = false;
                            parent.postMessage(payload, "{!pageURL}");
                        }
                    },
                    { escape: true }
                )
            );
        };

        function doCreateCaseAndMarkDone(payload) {
            Visualforce.remoting.Manager.invokeAction(
                CTIServiceIntegrationVFController.createCase(
                    payload,
                    function (result, event) {

                        payload.updateWdeCase = result;
                        payload.markDone = external.markDone();

                        parent.postMessage(payload, "{!pageURL}");
                    },
                    { escape: true }
                )
            );
        };

        function doUpdateWdeCaseAndMarkDone(payload) {
            Visualforce.remoting.Manager.invokeAction(
                CTIServiceIntegrationVFController.updateWdeCase(
                    payload,
                    function (result, event) {

                        payload.updateWdeCase = result;
                        payload.markDone = external.markDone();

                        parent.postMessage(payload, "{!pageURL}");
                    },
                    { escape: true }
                )
            );
        };

        function doUpdateMobileNextDisputeCaseOnWde(payload) {
            console.log("doUpdateMobileNextDisputeCaseOnWde");
            payload.service = 'WDE_CallDroppedDisputeAfterRegister';
            parent.postMessage(payload, "{!pageURL}");
        };

        function doCreateMobileNextDisputeCaseOnWde(payload) {
            Visualforce.remoting.Manager.invokeAction(
                CTIServiceIntegrationVFController.createMobileNextDisputeCase(
                    payload,
                    function (result, event) {

                        console.log("Response From VFController ", JSON.stringify(result));

                        payload.createMobileNextDisputeCase = result;
                        payload.service = 'WDE_CallDroppedDispute';
                        parent.postMessage(payload, "{!pageURL}");
                    },
                    { escape: true }
                )
            );
        };

        function doCloseCaseIfNonCanvas(caseId) {
            Visualforce.remoting.Manager.invokeAction(
                CTIServiceIntegrationVFController.closeCaseIfNonCanvas(
                    caseId,
                    function (result, event) { },
                    { escape: true }
                )
            );
        };

    </script>
</apex:page>