//
// Generated by ServiceReturn http://ServiceReturn.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class ServiceReturn {

	public class Interaction_date {
		public String start_date {get;set;} 
		public String end_date {get;set;} 

		public Interaction_date(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'start_date') {
							start_date = parser.getText();
						} else if (text == 'end_date') {
							end_date = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Interaction_date consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public String protocol_id {get;set;} 
	public Interaction_date interaction_date {get;set;} 
	public Channel channel {get;set;} 
	public String reason {get;set;} 
	public Customer_information customer_information {get;set;} 
	public List<Related_entities> related_entities {get;set;} 

	public ServiceReturn(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'protocol_id') {
						protocol_id = parser.getText();
					} else if (text == 'interaction_date') {
						interaction_date = new Interaction_date(parser);
					} else if (text == 'channel') {
						channel = new Channel(parser);
					} else if (text == 'reason') {
						reason = parser.getText();
					} else if (text == 'customer_information') {
						customer_information = new Customer_information(parser);
					} else if (text == 'related_entities') {
						related_entities = arrayOfRelated_entities(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'ServiceReturn consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Customer {
		public String name {get;set;} 
		public Id_document id_document {get;set;} 

		public Customer(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'name') {
							name = parser.getText();
						} else if (text == 'id_document') {
							id_document = new Id_document(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Customer consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Id_document {
		public String country {get;set;} 
		public String type_Z {get;set;} // in json: type
		public String value {get;set;} 

		public Id_document(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'country') {
							country = parser.getText();
						} else if (text == 'type') {
							type_Z = parser.getText();
						} else if (text == 'value') {
							value = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Id_document consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Related_entities {

		public Related_entities(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Related_entities consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Channel {
		public String channel_master {get;set;} 
		public String channel_id {get;set;} 

		public Channel(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'channel_master') {
							channel_master = parser.getText();
						} else if (text == 'channel_id') {
							channel_id = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Channel consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Customer_information {
		public Customer customer {get;set;} 
		public String identifiers {get;set;} 

		public Customer_information(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'customer') {
							customer = new Customer(parser);
						} else if (text == 'identifiers') {
							identifiers = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Customer_information consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static List<ServiceReturn> parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return arrayOfServiceReturn(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	



    private static List<ServiceReturn> arrayOfServiceReturn(System.JSONParser p) {
        List<ServiceReturn> res = new List<ServiceReturn>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new ServiceReturn(p));
        }
        return res;
    }





    private static List<Related_entities> arrayOfRelated_entities(System.JSONParser p) {
        List<Related_entities> res = new List<Related_entities>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Related_entities(p));
        }
        return res;
    }




}